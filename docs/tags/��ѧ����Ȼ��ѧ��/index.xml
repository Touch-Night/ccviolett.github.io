<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数学与自然科学类 on 罗潇阳的博客</title>
    <link>http://ccviolett.github.io/tags/%E6%95%B0%E5%AD%A6%E4%B8%8E%E8%87%AA%E7%84%B6%E7%A7%91%E5%AD%A6%E7%B1%BB/</link>
    <description>Recent content in 数学与自然科学类 on 罗潇阳的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 23 Mar 2022 20:46:47 +0800</lastBuildDate><atom:link href="http://ccviolett.github.io/tags/%E6%95%B0%E5%AD%A6%E4%B8%8E%E8%87%AA%E7%84%B6%E7%A7%91%E5%AD%A6%E7%B1%BB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>学习笔记 | C&#43;&#43; 程序设计</title>
      <link>http://ccviolett.github.io/posts/28-lesson-cpp/</link>
      <pubDate>Wed, 23 Mar 2022 20:46:47 +0800</pubDate>
      
      <guid>http://ccviolett.github.io/posts/28-lesson-cpp/</guid>
      <description>实参的数量    函数调用 func((exp1, exp2), (exp3, exp4, exp5)) 中所含 2 个实参。
抽象类    抽象类是包含纯虚函数的类，即包含 virtual void Func(void) = 0;。
多继承与二义性    一个派生类的两个基类中都有某个同名成员，在派生类中对这个成员的访问可能出现二义性。
解决二义性的最常用的方法是对成员名的限定。
一个派生类是从两个基类派生来的，而这两个基类又有一个共同的基类，对该基类成员进行访问时，可能出现二义性。
静态成员    静态成员在创建对象前就存在，是类的成员。
静态成员函数不能是静态函数，不能直接访问非静态成员。
访问共有静态成员的方式有以下三种：
 类名::静态成员名 对象名.静态成员名 对象指针-&amp;gt;静态成员名  问题：请问下列程序会输出什么？
#include &amp;lt;iostream&amp;gt; using namespace std; int fun() { static int x = 1; x *= 2; return x; } int main() { int i, s = 1; for (i = 1; i &amp;lt;= 3; ++i) s *= fun(); cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl; } 答案：64</description>
    </item>
    
  </channel>
</rss>
